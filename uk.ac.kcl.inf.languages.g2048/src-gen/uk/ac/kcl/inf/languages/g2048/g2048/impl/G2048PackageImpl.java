/**
 * generated by Xtext 2.24.0
 */
package uk.ac.kcl.inf.languages.g2048.g2048.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import uk.ac.kcl.inf.languages.g2048.g2048.G2048Factory;
import uk.ac.kcl.inf.languages.g2048.g2048.G2048Package;
import uk.ac.kcl.inf.languages.g2048.g2048.G2048Program;
import uk.ac.kcl.inf.languages.g2048.g2048.Level;
import uk.ac.kcl.inf.languages.g2048.g2048.LevelDefineStatement;
import uk.ac.kcl.inf.languages.g2048.g2048.SizeDefineStatement;
import uk.ac.kcl.inf.languages.g2048.g2048.Statement;
import uk.ac.kcl.inf.languages.g2048.g2048.TitleDefineStatement;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class G2048PackageImpl extends EPackageImpl implements G2048Package
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass g2048ProgramEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass statementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass titleDefineStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass sizeDefineStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass levelDefineStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum levelEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see uk.ac.kcl.inf.languages.g2048.g2048.G2048Package#eNS_URI
   * @see #init()
   * @generated
   */
  private G2048PackageImpl()
  {
    super(eNS_URI, G2048Factory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link G2048Package#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static G2048Package init()
  {
    if (isInited) return (G2048Package)EPackage.Registry.INSTANCE.getEPackage(G2048Package.eNS_URI);

    // Obtain or create and register package
    Object registeredG2048Package = EPackage.Registry.INSTANCE.get(eNS_URI);
    G2048PackageImpl theG2048Package = registeredG2048Package instanceof G2048PackageImpl ? (G2048PackageImpl)registeredG2048Package : new G2048PackageImpl();

    isInited = true;

    // Create package meta-data objects
    theG2048Package.createPackageContents();

    // Initialize created meta-data
    theG2048Package.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theG2048Package.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(G2048Package.eNS_URI, theG2048Package);
    return theG2048Package;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getG2048Program()
  {
    return g2048ProgramEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getG2048Program_Statements()
  {
    return (EReference)g2048ProgramEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getStatement()
  {
    return statementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTitleDefineStatement()
  {
    return titleDefineStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTitleDefineStatement_Title()
  {
    return (EAttribute)titleDefineStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getSizeDefineStatement()
  {
    return sizeDefineStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getSizeDefineStatement_Size()
  {
    return (EAttribute)sizeDefineStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getLevelDefineStatement()
  {
    return levelDefineStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLevelDefineStatement_Level()
  {
    return (EAttribute)levelDefineStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getLevelDefineStatement_Element()
  {
    return (EAttribute)levelDefineStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getLevel()
  {
    return levelEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public G2048Factory getG2048Factory()
  {
    return (G2048Factory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    g2048ProgramEClass = createEClass(G2048_PROGRAM);
    createEReference(g2048ProgramEClass, G2048_PROGRAM__STATEMENTS);

    statementEClass = createEClass(STATEMENT);

    titleDefineStatementEClass = createEClass(TITLE_DEFINE_STATEMENT);
    createEAttribute(titleDefineStatementEClass, TITLE_DEFINE_STATEMENT__TITLE);

    sizeDefineStatementEClass = createEClass(SIZE_DEFINE_STATEMENT);
    createEAttribute(sizeDefineStatementEClass, SIZE_DEFINE_STATEMENT__SIZE);

    levelDefineStatementEClass = createEClass(LEVEL_DEFINE_STATEMENT);
    createEAttribute(levelDefineStatementEClass, LEVEL_DEFINE_STATEMENT__LEVEL);
    createEAttribute(levelDefineStatementEClass, LEVEL_DEFINE_STATEMENT__ELEMENT);

    // Create enums
    levelEEnum = createEEnum(LEVEL);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    titleDefineStatementEClass.getESuperTypes().add(this.getStatement());
    sizeDefineStatementEClass.getESuperTypes().add(this.getStatement());
    levelDefineStatementEClass.getESuperTypes().add(this.getStatement());

    // Initialize classes and features; add operations and parameters
    initEClass(g2048ProgramEClass, G2048Program.class, "G2048Program", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getG2048Program_Statements(), this.getStatement(), null, "statements", null, 0, -1, G2048Program.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(statementEClass, Statement.class, "Statement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(titleDefineStatementEClass, TitleDefineStatement.class, "TitleDefineStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTitleDefineStatement_Title(), ecorePackage.getEString(), "title", null, 0, 1, TitleDefineStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(sizeDefineStatementEClass, SizeDefineStatement.class, "SizeDefineStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getSizeDefineStatement_Size(), ecorePackage.getEInt(), "size", null, 0, 1, SizeDefineStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(levelDefineStatementEClass, LevelDefineStatement.class, "LevelDefineStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getLevelDefineStatement_Level(), this.getLevel(), "level", null, 0, 1, LevelDefineStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getLevelDefineStatement_Element(), ecorePackage.getEString(), "element", null, 0, 1, LevelDefineStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(levelEEnum, Level.class, "Level");
    addEEnumLiteral(levelEEnum, Level.ONE);
    addEEnumLiteral(levelEEnum, Level.TWO);
    addEEnumLiteral(levelEEnum, Level.THREE);
    addEEnumLiteral(levelEEnum, Level.FOUR);
    addEEnumLiteral(levelEEnum, Level.FIVE);
    addEEnumLiteral(levelEEnum, Level.SIX);
    addEEnumLiteral(levelEEnum, Level.SEVEN);
    addEEnumLiteral(levelEEnum, Level.EIGHT);
    addEEnumLiteral(levelEEnum, Level.NINE);
    addEEnumLiteral(levelEEnum, Level.TEN);
    addEEnumLiteral(levelEEnum, Level.ELEVEN);

    // Create resource
    createResource(eNS_URI);
  }

} //G2048PackageImpl
